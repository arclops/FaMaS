{
  "version": 3,
  "sources": ["../../@mui/material/MenuList/MenuList.js", "../../@mui/material/utils/getScrollbarSize.js", "../../@mui/material/Menu/menuClasses.js", "../../@mui/material/Menu/Menu.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"];\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport ownerDocument from '../utils/ownerDocument';\r\nimport List from '../List';\r\nimport getScrollbarSize from '../utils/getScrollbarSize';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction nextItem(list, item, disableListWrap) {\r\n  if (list === item) {\r\n    return list.firstChild;\r\n  }\r\n  if (item && item.nextElementSibling) {\r\n    return item.nextElementSibling;\r\n  }\r\n  return disableListWrap ? null : list.firstChild;\r\n}\r\nfunction previousItem(list, item, disableListWrap) {\r\n  if (list === item) {\r\n    return disableListWrap ? list.firstChild : list.lastChild;\r\n  }\r\n  if (item && item.previousElementSibling) {\r\n    return item.previousElementSibling;\r\n  }\r\n  return disableListWrap ? null : list.lastChild;\r\n}\r\nfunction textCriteriaMatches(nextFocus, textCriteria) {\r\n  if (textCriteria === undefined) {\r\n    return true;\r\n  }\r\n  let text = nextFocus.innerText;\r\n  if (text === undefined) {\r\n    // jsdom doesn't support innerText\r\n    text = nextFocus.textContent;\r\n  }\r\n  text = text.trim().toLowerCase();\r\n  if (text.length === 0) {\r\n    return false;\r\n  }\r\n  if (textCriteria.repeating) {\r\n    return text[0] === textCriteria.keys[0];\r\n  }\r\n  return text.indexOf(textCriteria.keys.join('')) === 0;\r\n}\r\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\r\n  let wrappedOnce = false;\r\n  let nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\r\n  while (nextFocus) {\r\n    // Prevent infinite loop.\r\n    if (nextFocus === list.firstChild) {\r\n      if (wrappedOnce) {\r\n        return false;\r\n      }\r\n      wrappedOnce = true;\r\n    }\r\n\r\n    // Same logic as useAutocomplete.js\r\n    const nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\r\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\r\n      // Move to the next element.\r\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\r\n    } else {\r\n      nextFocus.focus();\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * A permanently displayed menu following https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/.\r\n * It's exposed to help customization of the [`Menu`](/material-ui/api/menu/) component if you\r\n * use it separately you need to move focus into the component manually. Once\r\n * the focus is placed inside the component it is fully keyboard accessible.\r\n */\r\nconst MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\r\n  const {\r\n      // private\r\n      // eslint-disable-next-line react/prop-types\r\n      actions,\r\n      autoFocus = false,\r\n      autoFocusItem = false,\r\n      children,\r\n      className,\r\n      disabledItemsFocusable = false,\r\n      disableListWrap = false,\r\n      onKeyDown,\r\n      variant = 'selectedMenu'\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const listRef = React.useRef(null);\r\n  const textCriteriaRef = React.useRef({\r\n    keys: [],\r\n    repeating: true,\r\n    previousKeyMatched: true,\r\n    lastTime: null\r\n  });\r\n  useEnhancedEffect(() => {\r\n    if (autoFocus) {\r\n      listRef.current.focus();\r\n    }\r\n  }, [autoFocus]);\r\n  React.useImperativeHandle(actions, () => ({\r\n    adjustStyleForScrollbar: (containerElement, theme) => {\r\n      // Let's ignore that piece of logic if users are already overriding the width\r\n      // of the menu.\r\n      const noExplicitWidth = !listRef.current.style.width;\r\n      if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\r\n        const scrollbarSize = `${getScrollbarSize(ownerDocument(containerElement))}px`;\r\n        listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\r\n        listRef.current.style.width = `calc(100% + ${scrollbarSize})`;\r\n      }\r\n      return listRef.current;\r\n    }\r\n  }), []);\r\n  const handleKeyDown = event => {\r\n    const list = listRef.current;\r\n    const key = event.key;\r\n    /**\r\n     * @type {Element} - will always be defined since we are in a keydown handler\r\n     * attached to an element. A keydown event is either dispatched to the activeElement\r\n     * or document.body or document.documentElement. Only the first case will\r\n     * trigger this specific handler.\r\n     */\r\n    const currentFocus = ownerDocument(list).activeElement;\r\n    if (key === 'ArrowDown') {\r\n      // Prevent scroll of the page\r\n      event.preventDefault();\r\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\r\n    } else if (key === 'ArrowUp') {\r\n      event.preventDefault();\r\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\r\n    } else if (key === 'Home') {\r\n      event.preventDefault();\r\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\r\n    } else if (key === 'End') {\r\n      event.preventDefault();\r\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\r\n    } else if (key.length === 1) {\r\n      const criteria = textCriteriaRef.current;\r\n      const lowerKey = key.toLowerCase();\r\n      const currTime = performance.now();\r\n      if (criteria.keys.length > 0) {\r\n        // Reset\r\n        if (currTime - criteria.lastTime > 500) {\r\n          criteria.keys = [];\r\n          criteria.repeating = true;\r\n          criteria.previousKeyMatched = true;\r\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\r\n          criteria.repeating = false;\r\n        }\r\n      }\r\n      criteria.lastTime = currTime;\r\n      criteria.keys.push(lowerKey);\r\n      const keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\r\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\r\n        event.preventDefault();\r\n      } else {\r\n        criteria.previousKeyMatched = false;\r\n      }\r\n    }\r\n    if (onKeyDown) {\r\n      onKeyDown(event);\r\n    }\r\n  };\r\n  const handleRef = useForkRef(listRef, ref);\r\n\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n  let activeItemIndex = -1;\r\n  // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n  React.Children.forEach(children, (child, index) => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      if (activeItemIndex === index) {\r\n        activeItemIndex += 1;\r\n        if (activeItemIndex >= children.length) {\r\n          // there are no focusable items within the list.\r\n          activeItemIndex = -1;\r\n        }\r\n      }\r\n      return;\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n    if (!child.props.disabled) {\r\n      if (variant === 'selectedMenu' && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n    if (activeItemIndex === index && (child.props.disabled || child.props.muiSkipListHighlight || child.type.muiSkipListHighlight)) {\r\n      activeItemIndex += 1;\r\n      if (activeItemIndex >= children.length) {\r\n        // there are no focusable items within the list.\r\n        activeItemIndex = -1;\r\n      }\r\n    }\r\n  });\r\n  const items = React.Children.map(children, (child, index) => {\r\n    if (index === activeItemIndex) {\r\n      const newChildProps = {};\r\n      if (autoFocusItem) {\r\n        newChildProps.autoFocus = true;\r\n      }\r\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\r\n        newChildProps.tabIndex = 0;\r\n      }\r\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\r\n    }\r\n    return child;\r\n  });\r\n  return /*#__PURE__*/_jsx(List, _extends({\r\n    role: \"menu\",\r\n    ref: handleRef,\r\n    className: className,\r\n    onKeyDown: handleKeyDown,\r\n    tabIndex: autoFocus ? 0 : -1\r\n  }, other, {\r\n    children: items\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? MenuList.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * If `true`, will focus the `[role=\"menu\"]` container and move into tab order.\r\n   * @default false\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n  /**\r\n   * If `true`, will focus the first menuitem if `variant=\"menu\"` or selected item\r\n   * if `variant=\"selectedMenu\"`.\r\n   * @default false\r\n   */\r\n  autoFocusItem: PropTypes.bool,\r\n  /**\r\n   * MenuList contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * If `true`, will allow focus on disabled items.\r\n   * @default false\r\n   */\r\n  disabledItemsFocusable: PropTypes.bool,\r\n  /**\r\n   * If `true`, the menu items will not wrap focus.\r\n   * @default false\r\n   */\r\n  disableListWrap: PropTypes.bool,\r\n  /**\r\n   * @ignore\r\n   */\r\n  onKeyDown: PropTypes.func,\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus\r\n   * and the vertical alignment relative to the anchor element.\r\n   * @default 'selectedMenu'\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default MenuList;", "import { unstable_getScrollbarSize as getScrollbarSize } from '@mui/utils';\r\nexport default getScrollbarSize;", "import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\r\nimport generateUtilityClass from '../generateUtilityClass';\r\nexport function getMenuUtilityClass(slot) {\r\n  return generateUtilityClass('MuiMenu', slot);\r\n}\r\nconst menuClasses = generateUtilityClasses('MuiMenu', ['root', 'paper', 'list']);\r\nexport default menuClasses;", "'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"onEntering\"],\r\n  _excluded2 = [\"autoFocus\", \"children\", \"className\", \"disableAutoFocusItem\", \"MenuListProps\", \"onClose\", \"open\", \"PaperProps\", \"PopoverClasses\", \"transitionDuration\", \"TransitionProps\", \"variant\", \"slots\", \"slotProps\"];\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\r\nimport { useSlotProps } from '@mui/base/utils';\r\nimport { HTMLElementType } from '@mui/utils';\r\nimport MenuList from '../MenuList';\r\nimport Popover, { PopoverPaper } from '../Popover';\r\nimport styled, { rootShouldForwardProp } from '../styles/styled';\r\nimport useTheme from '../styles/useTheme';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { getMenuUtilityClass } from './menuClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst RTL_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'right'\r\n};\r\nconst LTR_ORIGIN = {\r\n  vertical: 'top',\r\n  horizontal: 'left'\r\n};\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    classes\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root'],\r\n    paper: ['paper'],\r\n    list: ['list']\r\n  };\r\n  return composeClasses(slots, getMenuUtilityClass, classes);\r\n};\r\nconst MenuRoot = styled(Popover, {\r\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\r\n  name: 'MuiMenu',\r\n  slot: 'Root',\r\n  overridesResolver: (props, styles) => styles.root\r\n})({});\r\nexport const MenuPaper = styled(PopoverPaper, {\r\n  name: 'MuiMenu',\r\n  slot: 'Paper',\r\n  overridesResolver: (props, styles) => styles.paper\r\n})({\r\n  // specZ: The maximum height of a simple menu should be one or more rows less than the view\r\n  // height. This ensures a tappable area outside of the simple menu with which to dismiss\r\n  // the menu.\r\n  maxHeight: 'calc(100% - 96px)',\r\n  // Add iOS momentum scrolling for iOS < 13.0\r\n  WebkitOverflowScrolling: 'touch'\r\n});\r\nconst MenuMenuList = styled(MenuList, {\r\n  name: 'MuiMenu',\r\n  slot: 'List',\r\n  overridesResolver: (props, styles) => styles.list\r\n})({\r\n  // We disable the focus ring for mouse, touch and keyboard users.\r\n  outline: 0\r\n});\r\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(inProps, ref) {\r\n  var _slots$paper, _slotProps$paper;\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiMenu'\r\n  });\r\n  const {\r\n      autoFocus = true,\r\n      children,\r\n      className,\r\n      disableAutoFocusItem = false,\r\n      MenuListProps = {},\r\n      onClose,\r\n      open,\r\n      PaperProps = {},\r\n      PopoverClasses,\r\n      transitionDuration = 'auto',\r\n      TransitionProps: {\r\n        onEntering\r\n      } = {},\r\n      variant = 'selectedMenu',\r\n      slots = {},\r\n      slotProps = {}\r\n    } = props,\r\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\r\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\r\n  const theme = useTheme();\r\n  const isRtl = theme.direction === 'rtl';\r\n  const ownerState = _extends({}, props, {\r\n    autoFocus,\r\n    disableAutoFocusItem,\r\n    MenuListProps,\r\n    onEntering,\r\n    PaperProps,\r\n    transitionDuration,\r\n    TransitionProps,\r\n    variant\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const autoFocusItem = autoFocus && !disableAutoFocusItem && open;\r\n  const menuListActionsRef = React.useRef(null);\r\n  const handleEntering = (element, isAppearing) => {\r\n    if (menuListActionsRef.current) {\r\n      menuListActionsRef.current.adjustStyleForScrollbar(element, theme);\r\n    }\r\n    if (onEntering) {\r\n      onEntering(element, isAppearing);\r\n    }\r\n  };\r\n  const handleListKeyDown = event => {\r\n    if (event.key === 'Tab') {\r\n      event.preventDefault();\r\n      if (onClose) {\r\n        onClose(event, 'tabKeyDown');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * the index of the item should receive focus\r\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\r\n   * otherwise it's the very first item.\r\n   */\r\n  let activeItemIndex = -1;\r\n  // since we inject focus related props into children we have to do a lookahead\r\n  // to check if there is a `selected` item. We're looking for the last `selected`\r\n  // item and use the first valid item as a fallback\r\n  React.Children.map(children, (child, index) => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return;\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"MUI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n    if (!child.props.disabled) {\r\n      if (variant === 'selectedMenu' && child.props.selected) {\r\n        activeItemIndex = index;\r\n      } else if (activeItemIndex === -1) {\r\n        activeItemIndex = index;\r\n      }\r\n    }\r\n  });\r\n  const PaperSlot = (_slots$paper = slots.paper) != null ? _slots$paper : MenuPaper;\r\n  const paperExternalSlotProps = (_slotProps$paper = slotProps.paper) != null ? _slotProps$paper : PaperProps;\r\n  const rootSlotProps = useSlotProps({\r\n    elementType: slots.root,\r\n    externalSlotProps: slotProps.root,\r\n    ownerState,\r\n    className: [classes.root, className]\r\n  });\r\n  const paperSlotProps = useSlotProps({\r\n    elementType: PaperSlot,\r\n    externalSlotProps: paperExternalSlotProps,\r\n    ownerState,\r\n    className: classes.paper\r\n  });\r\n  return /*#__PURE__*/_jsx(MenuRoot, _extends({\r\n    onClose: onClose,\r\n    anchorOrigin: {\r\n      vertical: 'bottom',\r\n      horizontal: isRtl ? 'right' : 'left'\r\n    },\r\n    transformOrigin: isRtl ? RTL_ORIGIN : LTR_ORIGIN,\r\n    slots: {\r\n      paper: PaperSlot,\r\n      root: slots.root\r\n    },\r\n    slotProps: {\r\n      root: rootSlotProps,\r\n      paper: paperSlotProps\r\n    },\r\n    open: open,\r\n    ref: ref,\r\n    transitionDuration: transitionDuration,\r\n    TransitionProps: _extends({\r\n      onEntering: handleEntering\r\n    }, TransitionProps),\r\n    ownerState: ownerState\r\n  }, other, {\r\n    classes: PopoverClasses,\r\n    children: /*#__PURE__*/_jsx(MenuMenuList, _extends({\r\n      onKeyDown: handleListKeyDown,\r\n      actions: menuListActionsRef,\r\n      autoFocus: autoFocus && (activeItemIndex === -1 || disableAutoFocusItem),\r\n      autoFocusItem: autoFocusItem,\r\n      variant: variant\r\n    }, MenuListProps, {\r\n      className: clsx(classes.list, MenuListProps.className),\r\n      children: children\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * An HTML element, or a function that returns one.\r\n   * It's used to set the position of the menu.\r\n   */\r\n  anchorEl: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\r\n  /**\r\n   * If `true` (Default) will focus the `[role=\"menu\"]` if no focusable child is found. Disabled\r\n   * children are not focusable. If you set this prop to `false` focus will be placed\r\n   * on the parent modal container. This has severe accessibility implications\r\n   * and should only be considered if you manage focus otherwise.\r\n   * @default true\r\n   */\r\n  autoFocus: PropTypes.bool,\r\n  /**\r\n   * Menu contents, normally `MenuItem`s.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * When opening the menu will not focus the active item but the `[role=\"menu\"]`\r\n   * unless `autoFocus` is also set to `false`. Not using the default means not\r\n   * following WAI-ARIA authoring practices. Please be considerate about possible\r\n   * accessibility implications.\r\n   * @default false\r\n   */\r\n  disableAutoFocusItem: PropTypes.bool,\r\n  /**\r\n   * Props applied to the [`MenuList`](/material-ui/api/menu-list/) element.\r\n   * @default {}\r\n   */\r\n  MenuListProps: PropTypes.object,\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`, `\"tabKeyDown\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n  /**\r\n   * @ignore\r\n   */\r\n  PaperProps: PropTypes.object,\r\n  /**\r\n   * `classes` prop applied to the [`Popover`](/material-ui/api/popover/) element.\r\n   */\r\n  PopoverClasses: PropTypes.object,\r\n  /**\r\n   * The extra props for the slot components.\r\n   * You can override the existing props or add new ones.\r\n   *\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    paper: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside.\r\n   *\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    paper: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\r\n  /**\r\n   * The length of the transition in `ms`, or 'auto'\r\n   * @default 'auto'\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\r\n   * @default {}\r\n   */\r\n  TransitionProps: PropTypes.object,\r\n  /**\r\n   * The variant to use. Use `menu` to prevent selected items from impacting the initial focus.\r\n   * @default 'selectedMenu'\r\n   */\r\n  variant: PropTypes.oneOf(['menu', 'selectedMenu'])\r\n} : void 0;\r\nexport default Menu;"],
  "mappings": "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",
  "names": ["MenuList", "_jsx", "PropTypes", "React", "import_react_is", "import_prop_types", "import_jsx_runtime", "_excluded", "_excluded2", "Menu", "_jsx", "PropTypes"]
}
