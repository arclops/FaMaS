import {
  Typography_default,
  init_Typography
} from "./chunk-64TAIFZM.js";
import {
  init_composeClasses
} from "./chunk-DLPLQCZE.js";
import {
  init_styled,
  styled_default
} from "./chunk-KTWU52TS.js";
import {
  init_useThemeProps,
  useThemeProps
} from "./chunk-UECOC35K.js";
import {
  init_generateUtilityClass
} from "./chunk-3UBIB3NS.js";
import {
  clsx_default,
  init_clsx
} from "./chunk-WMHIOIEL.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-L367Q5NJ.js";
import {
  composeClasses,
  generateUtilityClass,
  generateUtilityClasses,
  init_esm
} from "./chunk-RQDDZ26F.js";
import {
  _extends,
  init_extends
} from "./chunk-HMTWVGVS.js";
import {
  require_jsx_runtime
} from "./chunk-VTQ2JCVL.js";
import {
  require_prop_types
} from "./chunk-Z7SDHLGG.js";
import {
  require_react
} from "./chunk-ZGRSIX2Q.js";
import {
  __esm,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@mui/material/CardHeader/cardHeaderClasses.js
function getCardHeaderUtilityClass(slot) {
  return generateUtilityClass("MuiCardHeader", slot);
}
var cardHeaderClasses, cardHeaderClasses_default;
var init_cardHeaderClasses = __esm({
  "node_modules/@mui/material/CardHeader/cardHeaderClasses.js"() {
    init_esm();
    init_generateUtilityClass();
    cardHeaderClasses = generateUtilityClasses("MuiCardHeader", ["root", "avatar", "action", "content", "title", "subheader"]);
    cardHeaderClasses_default = cardHeaderClasses;
  }
});

// node_modules/@mui/material/CardHeader/CardHeader.js
var React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, _excluded, useUtilityClasses, CardHeaderRoot, CardHeaderAvatar, CardHeaderAction, CardHeaderContent, CardHeader, CardHeader_default;
var init_CardHeader = __esm({
  "node_modules/@mui/material/CardHeader/CardHeader.js"() {
    "use client";
    init_objectWithoutPropertiesLoose();
    init_extends();
    React = __toESM(require_react());
    import_prop_types = __toESM(require_prop_types());
    init_clsx();
    init_composeClasses();
    init_Typography();
    init_useThemeProps();
    init_styled();
    init_cardHeaderClasses();
    import_jsx_runtime = __toESM(require_jsx_runtime());
    import_jsx_runtime2 = __toESM(require_jsx_runtime());
    _excluded = ["action", "avatar", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"];
    useUtilityClasses = (ownerState) => {
      const {
        classes
      } = ownerState;
      const slots = {
        root: ["root"],
        avatar: ["avatar"],
        action: ["action"],
        content: ["content"],
        title: ["title"],
        subheader: ["subheader"]
      };
      return composeClasses(slots, getCardHeaderUtilityClass, classes);
    };
    CardHeaderRoot = styled_default("div", {
      name: "MuiCardHeader",
      slot: "Root",
      overridesResolver: (props, styles) => _extends({
        [`& .${cardHeaderClasses_default.title}`]: styles.title,
        [`& .${cardHeaderClasses_default.subheader}`]: styles.subheader
      }, styles.root)
    })({
      display: "flex",
      alignItems: "center",
      padding: 16
    });
    CardHeaderAvatar = styled_default("div", {
      name: "MuiCardHeader",
      slot: "Avatar",
      overridesResolver: (props, styles) => styles.avatar
    })({
      display: "flex",
      flex: "0 0 auto",
      marginRight: 16
    });
    CardHeaderAction = styled_default("div", {
      name: "MuiCardHeader",
      slot: "Action",
      overridesResolver: (props, styles) => styles.action
    })({
      flex: "0 0 auto",
      alignSelf: "flex-start",
      marginTop: -4,
      marginRight: -8,
      marginBottom: -4
    });
    CardHeaderContent = styled_default("div", {
      name: "MuiCardHeader",
      slot: "Content",
      overridesResolver: (props, styles) => styles.content
    })({
      flex: "1 1 auto"
    });
    CardHeader = React.forwardRef(function CardHeader2(inProps, ref) {
      const props = useThemeProps({
        props: inProps,
        name: "MuiCardHeader"
      });
      const {
        action,
        avatar,
        className,
        component = "div",
        disableTypography = false,
        subheader: subheaderProp,
        subheaderTypographyProps,
        title: titleProp,
        titleTypographyProps
      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
      const ownerState = _extends({}, props, {
        component,
        disableTypography
      });
      const classes = useUtilityClasses(ownerState);
      let title = titleProp;
      if (title != null && title.type !== Typography_default && !disableTypography) {
        title = (0, import_jsx_runtime.jsx)(Typography_default, _extends({
          variant: avatar ? "body2" : "h5",
          className: classes.title,
          component: "span",
          display: "block"
        }, titleTypographyProps, {
          children: title
        }));
      }
      let subheader = subheaderProp;
      if (subheader != null && subheader.type !== Typography_default && !disableTypography) {
        subheader = (0, import_jsx_runtime.jsx)(Typography_default, _extends({
          variant: avatar ? "body2" : "body1",
          className: classes.subheader,
          color: "text.secondary",
          component: "span",
          display: "block"
        }, subheaderTypographyProps, {
          children: subheader
        }));
      }
      return (0, import_jsx_runtime2.jsxs)(CardHeaderRoot, _extends({
        className: clsx_default(classes.root, className),
        as: component,
        ref,
        ownerState
      }, other, {
        children: [avatar && (0, import_jsx_runtime.jsx)(CardHeaderAvatar, {
          className: classes.avatar,
          ownerState,
          children: avatar
        }), (0, import_jsx_runtime2.jsxs)(CardHeaderContent, {
          className: classes.content,
          ownerState,
          children: [title, subheader]
        }), action && (0, import_jsx_runtime.jsx)(CardHeaderAction, {
          className: classes.action,
          ownerState,
          children: action
        })]
      }));
    });
    true ? CardHeader.propTypes = {
      // ----------------------------- Warning --------------------------------
      // | These PropTypes are generated from the TypeScript type definitions |
      // |     To update them edit the d.ts file and run "yarn proptypes"     |
      // ----------------------------------------------------------------------
      /**
       * The action to display in the card header.
       */
      action: import_prop_types.default.node,
      /**
       * The Avatar element to display.
       */
      avatar: import_prop_types.default.node,
      /**
       * @ignore
       */
      children: import_prop_types.default.node,
      /**
       * Override or extend the styles applied to the component.
       */
      classes: import_prop_types.default.object,
      /**
       * @ignore
       */
      className: import_prop_types.default.string,
      /**
       * The component used for the root node.
       * Either a string to use a HTML element or a component.
       */
      component: import_prop_types.default.elementType,
      /**
       * If `true`, `subheader` and `title` won't be wrapped by a Typography component.
       * This can be useful to render an alternative Typography variant by wrapping
       * the `title` text, and optional `subheader` text
       * with the Typography component.
       * @default false
       */
      disableTypography: import_prop_types.default.bool,
      /**
       * The content of the component.
       */
      subheader: import_prop_types.default.node,
      /**
       * These props will be forwarded to the subheader
       * (as long as disableTypography is not `true`).
       */
      subheaderTypographyProps: import_prop_types.default.object,
      /**
       * The system prop that allows defining system overrides as well as additional CSS styles.
       */
      sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
      /**
       * The content of the component.
       */
      title: import_prop_types.default.node,
      /**
       * These props will be forwarded to the title
       * (as long as disableTypography is not `true`).
       */
      titleTypographyProps: import_prop_types.default.object
    } : void 0;
    CardHeader_default = CardHeader;
  }
});

// node_modules/@mui/material/CardHeader/index.js
var init_CardHeader2 = __esm({
  "node_modules/@mui/material/CardHeader/index.js"() {
    init_CardHeader();
    init_cardHeaderClasses();
    init_cardHeaderClasses();
  }
});

export {
  getCardHeaderUtilityClass,
  cardHeaderClasses_default,
  CardHeader_default,
  init_CardHeader2 as init_CardHeader
};
//# sourceMappingURL=chunk-4CXOVQUL.js.map
